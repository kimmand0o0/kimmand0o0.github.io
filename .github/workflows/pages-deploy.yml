name: Github Pages

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  workflow_dispatch:  # 수동 실행 가능

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 캐시 설정 (Jekyll 의존성 저장)
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Jekyll을 빌드하여 _site 디렉토리 생성
      - name: Build Jekyll site
        run: |
          bundle install
          bundle exec jekyll build

      # 빌드된 Jekyll 사이트를 업로드
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: _site  # Jekyll이 생성한 정적 파일 폴더

  # GitHub Pages 배포 작업
  deploy:
    needs: build_and_deploy  # 빌드가 끝난 후 실행
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: _site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
